# For generic configurations that do not pertain to rules or scopes, but rather
# on how LeGit analyzes and applies this file
Config: {}

# Rules that should be applied to all cases, regardless of scope
GenericRules: {}

# Rules with specific scopes attached to them
ScopedRules:
  # At least one scope required. This defines in which contexts to evaluate the
  # rules
  - Scope:
      # In this example attached rules should apply to branches that have a
      # number followed by an hiphen and arbitrary text (numerical or
      # otherwise). The action tells LeGit to include this scope, so rules will
      # be evaluated for branches which obey this scope
      - Type: BranchNameScope
        # Wether to include when scope condition is met, or exclude. All scope
        # conditions must have this Action specified
        Action: include
        Parameters:
          # Field specific to BranchNameScope. Format string where "[]" are used
          # as formatting delimiters
          NameLike: "[number]-[text]"
    # List of rules to evaluate, should the scope above be met
    Rules:
      # All rules come identified by their type
      - Type: CommitMessageSize
        Parameters:
          # Field specific to CommitMessageSize. The maximum size of the commit
          # message. If message is bigger than specified value, LeGit invalidates
          # the commit
          MaxSize: 100
